# -*- coding: utf-8 -*-
"""DataProject.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kp7ZcsFGzEnt0HZgQEk9Xy_9MHWeOlgq

Ecommerce sample database

Goal: Create a relational database for sample ecommerce website
"""

import pandas as pd
import random
import string
import numpy as np
import scipy.stats as stats
import requests
from bs4 import BeautifulSoup


product = pd.DataFrame(columns = ['product_id','name','sku','prices','quantity'])
orders = pd.DataFrame(columns = ['order_id', 'user_id','total','created_at'])
ordered = pd.DataFrame(columns = ['ordered_id','order_id','product_id','quantity'])
users = pd.DataFrame(columns = ['user_id','region','age'])

URL = "https://www.lego.com/en-us/themes/star-wars"
page = requests.get(URL)
product_name = []
product_price = []
price = []


soup = BeautifulSoup(page.content, "html.parser")
results = soup.find(id="blt4e128e4a78935e4b")
for x in range(1,8):
  URL = "https://www.lego.com/en-us/themes/star-wars?page=" + str(x)
  page = requests.get(URL)
  soup = BeautifulSoup(page.content, "html.parser")
  results = soup.find(id="blt4e128e4a78935e4b")
  Lego_sets = results.find_all("div", class_="ProductLeafSharedstyles__Wrapper-sc-1yg7ucv-0 dWswSG")
  for lego_set in Lego_sets:
    t = lego_set.find("h2", class_="Text__BaseText-sc-13i1y3k-0 iSNFVS ProductLeafSharedstyles__Title-sc-1yg7ucv-9 zimKm")
    n = str(t.find(class_="Markup__StyledMarkup-nc8x20-0 epIXnJ"))
    m=n.split('>')[1].split('<')[0]
    product_name.append(m)

    p = lego_set.find("span", class_="Text__BaseText-sc-13i1y3k-0 eTDhBg ProductPricestyles__StyledText-vmt0i4-0 chARQH")
    if p == None:
      p = lego_set.find("span",class_="Text__BaseText-sc-13i1y3k-0 fOBIfn")
    
    q = str(p).split('$')[1].split('<')[0]
    product_price.append(q)

for i in product_price:
  price.append(round(float(i),2))
print(product_price)
print(price)

product = product.assign(name = product_name)
product = product.assign(prices = price)

# get random sku of length 8 with letters and digits
characters = string.ascii_letters + string.digits

sku_list = []
productid = []

for x in range(len(product_name)):
  sku_list.append(''.join(random.choice(characters) for i in range(8)))
  productid.append(''.join(random.choice(string.digits) for i in range(4)))

product = product.assign(product_id = productid)  
product = product.assign(sku = sku_list)

x = np.round(np.random.normal(35, 3, 97), 0)

product = product.assign(quantity = x)

orderid =[]
for y in range(500):
  orderid.append(''.join(random.choice(string.digits) for i in range(5)))

i = np.random.normal(85, 3, 500)
orders = orders.assign(order_id = orderid)
orders = orders.assign(total = i)

import datetime
from datetime import timedelta
import random
date = []
for y in range(500):
  start_date = datetime.date(2021,1,1)
  end_date = datetime.date(2022,1,1)
  rand_date = start_date + (end_date - start_date) * random.random()
  date.append(rand_date)


orders = orders.assign(created_at = date)

userid=[]
purchasers = []
regions = []
region_list = ['Pacific','Mountain','South Atlantic','West South Central','East South Central','Mid Atlantic','New England','East North Central','West North Central']
ages = np.random.normal(28, 3, 300)

for y in range(300):
  userid.append(''.join(random.choice(string.digits) for i in range(6)))
  regions.append(random.choice(region_list))

for i in range(500):
  purchasers.append(random.choice(userid))

orders = orders.assign(user_id = purchasers)
users = users.assign(user_id = userid)
users = users.assign(region = regions)
users = users.assign(age = ages)

orderedid = []
randquantity = []
order_ids = []
product_ids = []

for l in range(750):
  orderedid.append(''.join(random.choice(string.digits) for i in range(6))) 
  randquantity.append(random.choice([1,2,3,4,5]))
  order_ids.append(random.choice(orders['order_id']))
  product_ids.append(random.choice(productid))



ordered = ordered.assign(ordered_id = orderedid)
ordered = ordered.assign(quantity = randquantity)
ordered = ordered.assign(order_id = order_ids)
ordered = ordered.assign(product_id = product_ids)

from google.colab import files
orders.to_csv('orders.csv', encoding = 'utf-8-sig') 
files.download('orders.csv')
ordered.to_csv('ordered.csv', encoding = 'utf-8-sig') 
files.download('ordered.csv')
product.to_csv('product.csv', encoding = 'utf-8-sig') 
files.download('product.csv')
users.to_csv('users.csv', encoding = 'utf-8-sig') 
files.download('users.csv')

